{"version":3,"file":"static/js/862.111f0bdb.chunk.js","mappings":"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","sources":["pages/auth/components/RegisterForm.jsx","pages/auth/RegisterPage.jsx","pages/auth/components/AuthNavigate.jsx","pages/auth/components/GooseImage.jsx","pages/auth/shared.styled.js","utils/schemas.js"],"sourcesContent":["import { Formik } from 'formik'\r\nimport { AuthNavigate } from './AuthNavigate'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { ROUTES } from '../../../navigation/routes'\r\nimport { registerFormSchema } from '../../../utils/schemas'\r\nimport { Button, Input } from '../../../components/'\r\nimport { LoginIcon } from '../../../assets/icons'\r\nimport { Text } from '../../../components'\r\nimport { css } from 'styled-components'\r\nimport { AuthFormStyled } from '../shared.styled'\r\nimport { useRegister } from '../../../hooks/query'\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  email: '',\r\n  password: '',\r\n}\r\n\r\nexport const RegisterForm = () => {\r\n  const { t } = useTranslation()\r\n  const { register, isLoading } = useRegister()\r\n\r\n  // TODO: Vitalii task: show loader instead of button icon. add \"loading\" prop to button\r\n  console.log(isLoading)\r\n\r\n  const handleSubmit = (values, { resetForm }) => {\r\n    register(values)\r\n    resetForm()\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      onSubmit={handleSubmit}\r\n      validationSchema={registerFormSchema}\r\n    >\r\n      {({ errors, touched }) => (\r\n        <AuthFormStyled autoComplete='off'>\r\n          <Text\r\n            style={{ marginBottom: '40px' }}\r\n            type='h5'\r\n            color='primary'\r\n            fontWeight='600'\r\n            fontSize={24}\r\n            lineHeight={24}\r\n            mobileStyles={css`\r\n              margin-bottom: 32px;\r\n              font-size: 18px;\r\n              line-height: 24px;\r\n            `}\r\n          >\r\n            {t('Sign up')}\r\n          </Text>\r\n          <Input\r\n            type='name'\r\n            name='name'\r\n            title={t('Name')}\r\n            placeholder={t('Enter your name')}\r\n            errorMessage={t(errors.name)}\r\n            successMessage={t('Well done')}\r\n            isError={errors.name && touched.name}\r\n          />\r\n          <Input\r\n            type='email'\r\n            name='email'\r\n            title={t('Email')}\r\n            placeholder={t('Enter your email')}\r\n            errorMessage={t(errors.email)}\r\n            successMessage={t('This is a CORRECT email')}\r\n            isError={errors.email && touched.email}\r\n          />\r\n          <Input\r\n            type='password'\r\n            name='password'\r\n            title={t('Password')}\r\n            placeholder={t('Enter password')}\r\n            errorMessage={t(errors.password)}\r\n            successMessage={t('This is a CORRECT password')}\r\n            isError={errors.password && touched.password}\r\n          />\r\n          <Button\r\n            style={{ marginTop: '8px' }}\r\n            type='submit'\r\n            fullWidth\r\n            rightIcon={<LoginIcon />}\r\n            title={t('Sign Up')}\r\n            variant='primary'\r\n          />\r\n          <AuthNavigate text={t('Log In')} route={ROUTES.LOGIN} />\r\n        </AuthFormStyled>\r\n      )}\r\n    </Formik>\r\n  )\r\n}\r\n","import { RegisterForm } from './components/RegisterForm'\r\nimport { gooseRegister } from '../../assets/images'\r\nimport { GooseImage } from './components/GooseImage'\r\nimport { AuthWrapper } from './shared.styled'\r\n\r\nconst RegisterPage = () => (\r\n  <AuthWrapper>\r\n    <GooseImage image={gooseRegister} alt='image of goose' right={0} />\r\n    <RegisterForm />\r\n  </AuthWrapper>\r\n)\r\n\r\nexport default RegisterPage\r\n","import { NavLink } from 'react-router-dom'\r\nimport styled, { css } from 'styled-components'\r\nimport { OpacityButton, Text } from '../../../components'\r\nimport { getMobileStyles } from '../../../styles/breakpoints'\r\n\r\nexport const AuthNavigate = ({ text, route }) => (\r\n  <OpacityButton>\r\n    <NavigateButtonStyled to={route}>\r\n      <Text\r\n        type='h5'\r\n        fontWeight='600'\r\n        mobileStyles={css`\r\n          font-size: 12px;\r\n          line-height: 14px;\r\n        `}\r\n        fontSize={18}\r\n        lineHeight={24}\r\n        color='primary'\r\n      >\r\n        {text}\r\n      </Text>\r\n    </NavigateButtonStyled>\r\n  </OpacityButton>\r\n)\r\n\r\nconst NavigateButtonStyled = styled(NavLink)`\r\n  ${({ theme: { colors } }) =>\r\n    css`\r\n      color: ${colors.primary};\r\n      position: absolute;\r\n      bottom: -24px;\r\n      left: 50%;\r\n      transform: translate(-50%, 100%);\r\n      ${getMobileStyles(css`\r\n        bottom: -18px;\r\n      `)}\r\n    `}\r\n`\r\n","import styled, { css } from 'styled-components'\r\nimport { getDesktopStyles, sizes } from '../../../styles/breakpoints'\r\nimport { useDimensions } from '../../../hooks'\r\n\r\nexport const GooseImage = ({ image, alt, right, left }) => {\r\n  const { width } = useDimensions()\r\n  const leftImageWidth = width >= sizes.desktop ? '20vw' : '25vw'\r\n\r\n  return (\r\n    <ImageOfGoose\r\n      style={{\r\n        width: `calc(${leftImageWidth} * (${width} / ${sizes.desktop}))`,\r\n        right,\r\n        left,\r\n      }}\r\n      src={image}\r\n      alt={alt}\r\n    />\r\n  )\r\n}\r\n\r\nconst ImageOfGoose = styled.img`\r\n  display: none;\r\n\r\n  ${getDesktopStyles(css`\r\n    max-width: 30vw;\r\n    display: block;\r\n    position: absolute;\r\n    bottom: 0;\r\n  `)}\r\n`\r\n","import styled, { css } from 'styled-components'\r\nimport { Form } from 'formik'\r\nimport { getBreakpointsStyles } from '../../styles/breakpoints'\r\n\r\nexport const AuthWrapper = styled.div`\r\n  ${({ theme: { colors } }) => css`\r\n    position: relative;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background-color: ${colors.secondaryBackground};\r\n  `}\r\n`\r\n\r\nexport const AuthFormStyled = styled(Form)`\r\n  ${({ theme: { colors } }) => css`\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: absolute;\r\n    width: calc(100% - 40px);\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -55%);\r\n    padding: 40px 24px 40px 24px;\r\n    border-radius: 8px;\r\n    background-color: ${colors.background};\r\n\r\n    ${getBreakpointsStyles({\r\n      desktop: css`\r\n        padding: 40px;\r\n        width: 30%;\r\n        min-width: 400px;\r\n      `,\r\n      tablet: css`\r\n        padding: 40px;\r\n        width: 80vw;\r\n      `,\r\n    })}\r\n  `}\r\n`\r\n","import { en } from '../localization/strings/en';\r\nimport * as yup from 'yup'\r\n\r\n\r\nexport const loginFormSchema = yup.object().shape({\r\n  email: yup.string().email(en['email must be a valid email']).required(en['email is a required field']),\r\n  password: yup\r\n    .string()\r\n    .min(4, en['password must be at least 4 characters'])\r\n    .required(en['password is a required field']),\r\n})\r\n\r\nexport const registerFormSchema = yup.object().shape({\r\n  name: yup.string().required(en['name is a required field']),\r\n  email: yup.string().email(en['email must be a valid email']).required(en['email is a required field']),\r\n  password: yup\r\n    .string()\r\n    .min(4, en['password must be at least 4 characters'])\r\n    .required(en['password is a required field']),\r\n})\r\n"],"names":["initialValues","name","email","password","RegisterForm","t","useTranslation","_useRegister","useRegister","register","isLoading","console","log","_jsx","Formik","onSubmit","values","_ref","resetForm","validationSchema","registerFormSchema","children","_ref2","errors","touched","_jsxs","AuthFormStyled","autoComplete","Text","style","marginBottom","type","color","fontWeight","fontSize","lineHeight","mobileStyles","css","_templateObject","_taggedTemplateLiteral","Input","title","placeholder","errorMessage","successMessage","isError","Button","marginTop","fullWidth","rightIcon","LoginIcon","variant","AuthNavigate","text","route","ROUTES","LOGIN","AuthWrapper","GooseImage","image","gooseRegister","alt","right","OpacityButton","NavigateButtonStyled","to","styled","NavLink","_templateObject2","colors","theme","_templateObject3","primary","getMobileStyles","_templateObject4","left","width","useDimensions","leftImageWidth","sizes","desktop","ImageOfGoose","concat","src","img","getDesktopStyles","div","secondaryBackground","Form","background","getBreakpointsStyles","_templateObject5","tablet","_templateObject6","loginFormSchema","yup","shape","en","required","min"],"sourceRoot":""}