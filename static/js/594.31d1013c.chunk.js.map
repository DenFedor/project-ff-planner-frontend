{"version":3,"file":"static/js/594.31d1013c.chunk.js","mappings":"oSAOaA,EAAW,SAAHC,GAA2C,IAArCC,EAAYD,EAAZC,aAAcC,EAAeF,EAAfE,gBACvCC,GAA0BC,EAAAA,EAAAA,KAAlBC,EAAMF,EAANE,OAAQC,EAAKH,EAALG,MAEhB,OACEC,EAAAA,EAAAA,KAACC,EAAe,CAAAC,UACdF,EAAAA,EAAAA,KAACG,EAAAA,EAAY,CACXC,YAAY,EACZC,UAAW,SAACC,GAAI,OAAKX,EAAgBW,EAAKC,KAAK,EAC/CC,QAAS,CAACC,EAAAA,EAAeC,EAAAA,IACzBC,cAAe,KACfC,YAAY,eACZC,eAAgB,SAACC,GAAK,OACpBd,EAAAA,EAAAA,KAACe,EAAO,CACNC,UACEF,EAAMP,KAAKU,iBAAmBvB,EAAauB,eAAiB,gBAAaC,EAC1EhB,SAEAY,EAAMK,eACC,EAEZC,OAAQ,CACN,CACEC,GAAI,IACJC,MAAO,gBACPC,MAAO7B,EACP8B,gBAAiB,UACjBC,UAAW,UACXC,QAAS,SAGX,CACEL,GAAI,IACJC,MAAO,gBACPC,MAAO7B,EACP8B,gBAAiB,UACjBC,UAAW,UACXC,QAAS,SAGX,CACEL,GAAI,IACJC,MAAO,gBACPC,MAAO7B,EACP8B,gBAAiB,UACjBC,UAAW,UACXC,QAAS,SAGX,CACEL,GAAI,IACJC,MAAO,gBACPC,MAAO7B,EACP8B,gBAAiB,UACjBC,UAAW,UACXC,QAAS,UAGbC,qBAAqB,EACrBC,gBAAgB,EAChBC,YAAa9B,EAAQD,EACrBgC,SAAU,KAIlB,EAEMf,EAAUgB,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iBACtB,SAAAC,GAAA,IAAYC,EAAMD,EAAfE,MAASD,OAAM,OAASE,EAAAA,EAAAA,IAAGC,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,2XASrBE,EAAOI,oBAMMJ,EAAOK,QAClBL,EAAOM,OAGhBC,EAAAA,EAAAA,KAAgBL,EAAAA,EAAAA,IAAGM,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,sIAMnB,IAIAjC,EAAkB8B,EAAAA,GAAOc,QAAOC,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,iBAClC,SAAAa,GAAA,IAAYX,EAAMW,EAAfV,MAASD,OAAM,OAASE,EAAAA,EAAAA,IAAGU,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,+rCAERE,EAAOa,eAKPb,EAAOa,eAoBlBb,EAAOK,QAKIL,EAAOc,QACPd,EAAOa,gBAGzBE,EAAAA,EAAAA,IAAqB,CACrBC,SAASd,EAAAA,EAAAA,IAAGe,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,gDAGZoB,QAAQhB,EAAAA,EAAAA,IAAGiB,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,gDAGXsB,QAAQlB,EAAAA,EAAAA,IAAGmB,IAAAA,GAAAvB,EAAAA,EAAAA,GAAA,iDAGX,ICzIR,EAVqB,SAAHzC,IAAWiE,EAAAA,EAAAA,GAAAjE,GAC3B,IAAAkE,GAAwCC,EAAAA,EAAAA,UAAS,IAAIC,MAAOC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAArDjE,EAAYoE,EAAA,GAAEnE,EAAemE,EAAA,GAEpC,OACE9D,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAACR,EAAQ,CAACE,aAAcA,EAAcC,gBAAiBA,KAG7D,C","sources":["pages/calendar/components/Calendar.jsx","pages/calendar/CalendarPage.jsx"],"sourcesContent":["import FullCalendar from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport interactionPlugin from '@fullcalendar/interaction'\r\nimport { useDimensions } from '../../../hooks'\r\nimport styled, { css } from 'styled-components'\r\nimport { getBreakpointsStyles, getMobileStyles } from '../../../styles/breakpoints'\r\n\r\nexport const Calendar = ({ selectedDate, setSelectedDate }) => {\r\n  const { height, width } = useDimensions()\r\n\r\n  return (\r\n    <CalendarWrapper>\r\n      <FullCalendar\r\n        dayHeaders={false}\r\n        dateClick={(info) => setSelectedDate(info.date)}\r\n        plugins={[dayGridPlugin, interactionPlugin]}\r\n        headerToolbar={null}\r\n        initialView='dayGridMonth'\r\n        dayCellContent={(props) => (\r\n          <DayCell\r\n            className={\r\n              props.date.toDateString() === selectedDate.toDateString() ? 'selected' : undefined\r\n            }\r\n          >\r\n            {props.dayNumberText}\r\n          </DayCell>\r\n        )}\r\n        events={[\r\n          {\r\n            id: '1',\r\n            title: 'All-day event',\r\n            start: selectedDate,\r\n            backgroundColor: '#FCF0D4',\r\n            textColor: '#F3B249',\r\n            display: 'block',\r\n          },\r\n\r\n          {\r\n            id: '2',\r\n            title: 'All-day event',\r\n            start: selectedDate,\r\n            backgroundColor: '#FCF0D4',\r\n            textColor: '#F3B249',\r\n            display: 'block',\r\n          },\r\n\r\n          {\r\n            id: '3',\r\n            title: 'All-day event',\r\n            start: selectedDate,\r\n            backgroundColor: '#FCF0D4',\r\n            textColor: '#F3B249',\r\n            display: 'block',\r\n          },\r\n\r\n          {\r\n            id: '4',\r\n            title: 'All-day event',\r\n            start: selectedDate,\r\n            backgroundColor: '#FCF0D4',\r\n            textColor: '#F3B249',\r\n            display: 'block',\r\n          },\r\n        ]}\r\n        showNonCurrentDates={false}\r\n        fixedWeekCount={false}\r\n        aspectRatio={width / height}\r\n        firstDay={1}\r\n      />\r\n    </CalendarWrapper>\r\n  )\r\n}\r\n\r\nconst DayCell = styled.div`\r\n  ${({ theme: { colors } }) => css`\r\n    width: 26px;\r\n    height: 26px;\r\n    margin: 14px 14px 0 0;\r\n    padding: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 8px;\r\n    color: ${colors.secondaryButtonText};\r\n    font-size: 16px;\r\n    font-weight: 700;\r\n    line-height: 18px;\r\n\r\n    &.selected {\r\n      background-color: ${colors.primary};\r\n      color: ${colors.white} !important ;\r\n    }\r\n\r\n    ${getMobileStyles(css`\r\n      margin: 8px 4px 0 0;\r\n      width: 20px;\r\n      height: 20px;\r\n      font-size: 12px;\r\n      line-height: 14px;\r\n    `)}\r\n  `}\r\n`\r\n\r\nconst CalendarWrapper = styled.section`\r\n  ${({ theme: { colors } }) => css`\r\n    .fc.fc-media-screen {\r\n      border: 1px solid ${colors.calendarBorder} !important;\r\n      border-radius: 8px;\r\n    }\r\n\r\n    table {\r\n      border: 1px solid ${colors.calendarBorder} !important;\r\n      border-radius: 8px;\r\n      overflow: hidden;\r\n    }\r\n\r\n    .fc-scrollgrid {\r\n      border-collapse: collapse;\r\n    }\r\n\r\n    td.fc-day {\r\n      :hover {\r\n        opacity: 0.85;\r\n      }\r\n\r\n      :active {\r\n        opacity: 0.7;\r\n      }\r\n    }\r\n\r\n    td.fc-day-today .fc-daygrid-day-number div {\r\n      color: ${colors.primary};\r\n    }\r\n\r\n    td.fc-day-today,\r\n    td.fc-daygrid-day {\r\n      background-color: ${colors.content} !important;\r\n      border: 1px solid ${colors.calendarBorder};\r\n      cursor: pointer;\r\n\r\n      ${getBreakpointsStyles({\r\n        desktop: css`\r\n          min-height: 125px;\r\n        `,\r\n        tablet: css`\r\n          min-height: 144px;\r\n        `,\r\n        mobile: css`\r\n          min-height: 94px;\r\n        `,\r\n      })}\r\n    }\r\n\r\n    .fc-daygrid-day-events {\r\n      display: flex;\r\n      flex-direction: column;\r\n      row-gap: 4px;\r\n      padding: 8px;\r\n      max-height: calc(34px * 3.5);\r\n      overflow-y: auto;\r\n\r\n      .fc-event {\r\n        margin: 0;\r\n        border: none;\r\n        border-radius: 8px;\r\n        padding: 4px 10px;\r\n\r\n        .fc-event-time {\r\n          display: none;\r\n        }\r\n\r\n        .fc-event-title {\r\n          font-weight: 700;\r\n          font-size: 14px;\r\n          line-height: 18px;\r\n          text-overflow: ellipsis;\r\n        }\r\n      }\r\n    }\r\n  `}\r\n`\r\n","import { useState } from 'react'\nimport { Calendar } from './components/Calendar'\n\nconst CalendarPage = ({}) => {\n  const [selectedDate, setSelectedDate] = useState(new Date())\n\n  return (\n    <div>\n      <Calendar selectedDate={selectedDate} setSelectedDate={setSelectedDate} />\n    </div>\n  )\n}\n\nexport default CalendarPage\n"],"names":["Calendar","_ref","selectedDate","setSelectedDate","_useDimensions","useDimensions","height","width","_jsx","CalendarWrapper","children","FullCalendar","dayHeaders","dateClick","info","date","plugins","dayGridPlugin","interactionPlugin","headerToolbar","initialView","dayCellContent","props","DayCell","className","toDateString","undefined","dayNumberText","events","id","title","start","backgroundColor","textColor","display","showNonCurrentDates","fixedWeekCount","aspectRatio","firstDay","styled","div","_templateObject","_taggedTemplateLiteral","_ref2","colors","theme","css","_templateObject2","secondaryButtonText","primary","white","getMobileStyles","_templateObject3","section","_templateObject4","_ref3","_templateObject5","calendarBorder","content","getBreakpointsStyles","desktop","_templateObject6","tablet","_templateObject7","mobile","_templateObject8","_objectDestructuringEmpty","_useState","useState","Date","_useState2","_slicedToArray"],"sourceRoot":""}